@use "sass:color";

.fas {
  width: 1.25rem;
  height: 1.25rem;
}

.container {
  padding: 1.88rem 1.5rem;
  @media screen and (min-width: 1024px) {
    padding: 1.88rem 6.4rem;
  }
  @media screen and (min-width: 1240px) {
    padding: 1.88rem 13rem;
  }
}

main .location {
  display: flex;
  background-color: $light-grey;
  justify-content: center;
  padding: 1rem;
  align-items: center;
  text-align: center;
  position: relative;
  z-index: 10;
  @media screen and (max-width: 1024px) {
    @include mid-shadow;
  }

  &__icon {
    margin-right: 1rem;
    color: $dark-grey;
  }
  &__city {
    border: none;
    width: 109px;
    background-color: transparent;
    color: $dark-grey;
    font-weight: 500;
    font-size: 1rem;
    text-overflow: ellipsis;
  }
}

.hero {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  background-color: $secondary-background;
  padding: 2rem 1.5rem;
  gap: 1rem;

  &__title {
    font-weight: 900;
    color: black;
    font-size: 1.5rem;
    margin: 0;
  }
  &__subtitle {
    color: $dark-grey;
    font-size: 1.125rem;
    font-weight: 300;
    margin: 0;
  }
  &__button {
    @include button-gradient;
    margin: 1rem 0;
  }
}

.function {
  background-color: white;
  padding: 1.3rem 0;

  &__title {
    margin-bottom: 2rem;
  }
  &__steps {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    margin-left: 0.8rem;
    counter-reset: step; /* Reset counter outside the li elements */
    @media screen and (min-width: 1024px) {
      flex-direction: row;
      margin-left: 0;
      width: 100%;
    }
  }
  &__item {
    display: flex;
    gap: 1rem;
    align-items: center;
    padding: 1.6rem 0.8rem 1.6rem 1.6rem;
    background-color: $secondary-background;
    border-radius: 20px;
    box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.15);
    @include function-animation;
    position: relative;
    &::before {
      // Use the content property to display the current value of the 'step' counter
      content: counter(step);
      // Increment the 'step' counter for each item
      counter-increment: step;
      position: absolute;
      left: 0;
      // Move the pseudo-element 50% to the left to center it horizontally
      transform: translateX(-50%);
      background-color: $primary;
      color: #fff;
      width: 25px;
      height: 25px;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 0.8rem;
    }

    // Change the background color of the circle when hovering over the parent element
    // &:hover::before {
    //   background-color: $primary;
    // }
    @media screen and (min-width: 1024px) {
      // width: 100%;
      flex: 1;
    }
  }
  &__icon {
    color: $mid-grey;
    font-size: 1.25rem;
  }
  &__txt {
    font-weight: 500;
  }
}

.restaurants {
  background-color: $secondary-background;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  padding-bottom: 2rem;
  &__title {
    margin: 2rem 0;
  }
}

.icon {
  width: 20px;
  height: 21px;
}
